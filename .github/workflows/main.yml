name: CI

on:
  push:
    branches: [ master, ci, release ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Setup Poetry
      uses: Gr1N/setup-poetry@v8

    - name: Install dependencies
      run: poetry install

    - name: Lint with flake8
      run: |
        poetry run pip install flake8
        poetry run flake8 . --count --show-source --max-complexity=10 --max-line-length=80 --statistics

    - name: Build package
      run: poetry build

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to container registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN}}

    - name: Get plugin version
      run: |
        echo "plugin_version=$(poetry version | cut -f 2 -d ' ')" >> $GITHUB_ENV

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        build-args: |
          BASE_IMAGE=certbot/certbot
          CERTBOT_DNS_CLOUDNS_VERSION=${{ env.plugin_version }}
        push: true
        tags: |
          ghcr.io/inventage/certbot-dns-cloudns:latest
          ghcr.io/inventage/certbot-dns-cloudns:${{ env.plugin_version }}

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}

  compatibility:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup Poetry
        uses: Gr1N/setup-poetry@v8

      - name: Install dependencies
        run: poetry install

      - name: Build package
        run: poetry build

      # TODO: Run some tests
